name: Build and Publish Package

on:
  push:
    branches:
      - release
      - 'release/**'  # Matches release/v1.0, release/hotfix, etc.
    tags:
      - 'v*'  # Matches v1.0.0, v2.1.3, etc.
  
  workflow_dispatch:
    inputs:
      publish_to:
        description: 'Publish destination'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
      
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: uv sync --all-extras --dev
      
      - name: Run tests
        run: uv run chimeralm -h

  build:
    name: Build distribution
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      
      - name: Build package
        run: uv build
      
      - name: Store distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    # Only publish to TestPyPI for release branches (not tags)
    if: startsWith(github.ref, 'refs/heads/release') || github.event.inputs.publish_to == 'testpypi'
    
    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      
      - name: Publish to TestPyPI
        run: uv publish --publish-url https://test.pypi.org/legacy/ --token ${{ secrets.TEST_PYPI_API_TOKEN }}

  publish-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    # Only publish to PyPI for version tags or manual trigger
    if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.publish_to == 'pypi'
    
    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      
      - name: Publish to PyPI
        run: uv publish
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}