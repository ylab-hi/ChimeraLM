[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "chimeralm"
description = "ChimeraLM: A genomic lanuage model to identify chimera artifact introduced by whole genome amplification (WGA)."
authors = [
    { name = "Yangyang Li", email = "yangyang.li@northwestern.edu" },
    { name = "Qingxiang Guo", email = "qingxiang.guo@northwestern.edu" },
]
readme = "README.md"
requires-python = ">=3.10,<3.12"
version = "1.0.0"
license = { file = "LICENSE" }
keywords = ["deep learning", "bioinformatics", "rust"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Rust",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "datasets>=3.2.0",
    "evaluate>=0.4.3",
    "hydra-core>=1.3.2",
    "lightning>=2.4.0",
    "needletail==0.5.0",
    "omegaconf>=2.3.0",
    "rich>=13.9.4",
    "torch==2.5.1",
    "torchvision>=0.20.1",
    "torchaudio>=2.5.0",
    "torchmetrics>=1.6.0",
    "typer>=0.15.1",
    "transformers>=4.47.1",
    "einops>=0.8.0",
    "pyfastx>=2.2.0",
    "pysam>=0.22.1",
    "hf-xet>=1.1.10",
    "gradio>=4.0.0",
    "plotly>=5.0.0",
    "joblib>=1.5.2",
]

[project.optional-dependencies]
# mamba = ['mamba-ssm[causal-conv1d]>=2.2.4']

[project.scripts]
chimeralm = "chimeralm.__main__:app"

[dependency-groups]
dev = [
    "fire>=0.7.0",
    "hydra-colorlog>=1.2.0",
    "hydra-optuna-sweeper>=1.2.0",
    "hydra-submitit-launcher>=1.2.0",
    "ipdb>=0.13.13",
    "ipykernel>=6.29.5",
    "ipython>=8.31.0",
    "jupyter>=1.1.1",
    "matplotlib>=3.9.3",
    "maturin>=1.8.1",
    "nvitop>=1.3.2",
    "pytest>=8.3.4",
    "pytest-sugar>=1.0.0",
    "ruff>=0.9.2",
    "seaborn>=0.13.2",
    "sqlalchemy>=2.0.37",
    "statsmodels>=0.14.5",
    "wandb>=0.19.0",
]

[tool.uv]
no-build-isolation-package = ['flash-attn', 'causal-conv1d']
cache-keys = [
    { file = "pyproject.toml" },
    { file = "Cargo.toml" },
    { file = "src/*.rs" },
]

[project.urls]
homepage = "https://github.com/ylab-hi/chimera"
documentation = "https://github.com/ylab-hi/chimera"
repository = "https://github.com/ylab-hi/chimera"
changelog = "https://github.com/ylab-hi/chimera/README.md"

[tool.ruff]
target-version = "py310"
line-length = 120
fix = true
exclude = [
    "tests/*",
    "scripts/*",
    "docs/conf.py",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "tasks.py",
    "notebooks/data.ipynb",
]

[tool.ruff.lint]
fixable = ["ALL"]
select = [
    "ANN",
    "D",
    "A",
    "F",
    "E",
    "W",
    "C90",
    "I",
    "UP",
    "N",
    "YTT",
    "TID",
    "S",
    "BLE",
    "FBT",
    "PLR",
    "B",
    "B9",
    "A",
    "C4",
    "T10",
    "EM",
    "ICN",
    "T20",
    "Q",
    "RET",
    "SIM",
    "ARG",
    "DTZ",
    "ERA",
    "PD",
    "PGH",
    "PLC",
    "PLE",
    "PLW",
    "RUF",
    "PL",
    "TD",
    "FIX",
    "PTH",
    "TCH",
    "SLOT",
    "PT",
    "PYI",
    "PIE",
    "ISC",
    "FA",
    "EXE",
    # "CPY",
    "COM",
]

ignore = [
    "E501",
    "D203",
    "D100",
    "D401",
    "ANN001",
    "ANN002",
    "ANN003",
    "ANN201",
    "ANN202",
    "ANN204",
    "ANN205",
    "ANN206",
    "PGH003",
    "N802",
    "N803",
    "N806",
    "N815",
    "EM101",
    # formatter conflict
    'COM812',
    'COM819',
    'D206',
    'ISC001',
    'Q000',
    'Q001',
    'Q002',
    'Q003',
    'W191',
]
exclude = ["*.ipynb"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
# magic-trailing-comma = "respect"
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["typer.Argument", "typer.Option"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.per-file-ignores]
"chimera/data/mnist_datamodule.py" = ["ARG002", "PLR0913", "D205", "D402"]
"chimera/models/mnist_module.py" = ["ARG002", "A002"]
"chimera/utils/pylogger.py" = ["D205", "PLR5501", "SIM114"]
"chimera/models/components/simple_dense_net.py" = ["ARG002", "PLR0913"]
"chimera/eval.py" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = 'google'

[tool.coverage.paths]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["chimera"]
omit = ["tests/*"]

[tool.coverage.report]
show_missing = true
fail_under = 40
ignore_errors = true
exclude_lines = [
    "pragma: nocover",
    "raise NotImplementedError",
    "raise NotImplementedError()",
    "if __name__ == .__main__.:",
]

[tool.mypy]
strict = false
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = "tests/"
log_cli = true
filterwarnings = ["ignore::DeprecationWarning", "ignore::UserWarning"]
markers = [
    "smoke: a quick smoke test",
    "failing: failing tests",
    "imports: importing tests",
    "slow: slow tests",
]
addopts = [
    "--color=yes",
    "--durations=0",
    "--strict-markers",
    "--doctest-modules",
    "--import-mode=importlib",
]
